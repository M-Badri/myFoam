/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1812                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     1812;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (0.0                 0.0                  1.0)    //0
    (0.0                 0.0                  1.0)    //1
    (9.99847695156E-01   1.74524064373E-02    0.0)    //2
    (9.99847695156E-01  -1.74524064373E-02    0.0)    //3
    (0.0                 0.0                100.0)    //4
    (0.0                 0.0                100.0)    //5
    (9.99847695156E01    1.74524064373E00     0.0)    //6
    (9.99847695156E01   -1.74524064373E00     0.0)    //7
);

blocks
(
    hex (3 2 1 0 7 6 5 4) (1 200 400) simpleGrading (1 1 1)
);

edges
(
    arc 1 2 (   7.06999085399E-001  1.23407149398E-002   0.7071067812)
    arc 2 3 (   1.0                 0.0                  0.0         )
    arc 3 0 (   7.06999085399E-001 -1.23407149398E-002   0.7071067812)
    arc 5 6 (   7.06999085399E+001  1.23407149398E+000  70.7106781187)
    arc 6 7 ( 100.0                 0.0                  0.0         )
    arc 7 4 (   7.06999085399E+001 -1.23407149398E+000  70.7106781187)
);

boundary
(
    free
    {
        type patch;
        faces
        (
            (7 4 5 6)
        );
    }
    cyc1
    {
        type wedge;
        neighbourPatch cyc2;
        faces
        (
            (0 4 7 3)
        );
        transform      rotational;
        rotationAxis      (0 0 1);
        rotationCentre    (0 0 0);
        matchTolerance       1e-8;
    }
    cyc2
    {
        type wedge;
        neighbourPatch cyc1;
        faces
        (
            (5 1 2 6)
        );
        transform      rotational;
        rotationAxis      (0 0 1);
        rotationCentre    (0 0 0);
        matchTolerance       1e-8;
    }
/*
    mirrorPlane
    {
        type patch;
        faces
        (
            (3 7 6 2)
        );
    }
*/
    sphere
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
